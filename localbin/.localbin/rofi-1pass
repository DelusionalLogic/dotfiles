#!/bin/bash
set -eo pipefail


: "${PINENTRY_PROGRAM:=pinentry-gnome3}"

debug() {
    echo "$@" > /dev/stderr
}

create_session() {
	if [[ -f "$HOME/.config/passrofil/passwd" ]]; then
		masterpass=$(gpg --decrypt "$HOME/.config/passrofil/passwd" 2>/dev/null)
		if [[ $? -eq 0 ]] ; then
			echo "$masterpass" | op signin > .config/op/session
			return 0
		fi
	fi

    if command -v $PINENTRY_PROGRAM > /dev/null; then
        $PINENTRY_PROGRAM << EOS | grep -oP 'D \K.*' | op signin > ~/.config/op/session
SETDESC Enter your 1password master password:
SETPROMPT Master Password:
GETPIN
EOS
    fi
}

login() {
    source ~/.config/op/session
	# Check if the session is valid
    if ! op list vaults > /dev/null; then
		# Create a new one if it isn't
		create_session
	fi
    source ~/.config/op/session
}

print-account-list() {
    set +e
    op list items | jq -r '.[] | " - \(.overview.title) (\(.overview.ainfo)) [\(.uuid)]"'
    LOGGED_IN=${PIPESTATUS[0]}
    set -e

    if [ $LOGGED_IN -eq 127 ]; then
        echo "1password CLI tool 'op' not found"
        exit 2
    fi

    if [ ! $LOGGED_IN -eq 0 ]; then
        echo "Listing failed"
        exit 1
    fi
}

open-account-url() {
    local url=$(op get item "$1" | jq -r '.overview.url')
    if [[ -n $url ]]; then
        xdg-open "$url" >/dev/null 2>/dev/null
    else
        exit 2
    fi
}

is-actual-url() {
    local url="$1"
    if [[ -n $url && "$url" != " " && "$url" != "http://" && "$url" != "https://" ]]; then
        return 0
    else
        return 1
    fi
}

show-account-options() {
    local id="$1"
    local entry=$(op get item "$id")

    echo ">> Copy password [$id]"
    echo ">> Copy username [$id]"

    if [[ -n $(echo $entry | jq -r '.details.sections[].fields[].v | select(contains("otpauth://"))') ]]; then
        echo ">> Copy OTP [$id]"
    fi

    url=$(echo $entry | jq -r '.overview.url')
    if is-actual-url "$url"; then
        echo ">> Open $url [$id]"
        echo ">> Copy URL [$id]"
    fi

    echo ">> Copy ID [$id]"
}

id-in-selection() {
    echo "$1" | grep -oE '\[[a-z0-9]+\]$' | tr -d '[]'
}

clipboard() {
    xclip -selection c >/dev/null 2>/dev/null
}

login

if [[ -n "$1" ]]; then
    selected="$1"
    id="$(id-in-selection "$selected")"

    if [[ -n $id ]]; then
        case "$selected" in
            '>> Copy password'*)
                op get item "$id" | jq -j '.details.fields[] | select(.designation == "password") | .value' | clipboard
                ;;
            '>> Copy username'*)
                op get item "$id" | jq -j '.details.fields[] | select(.designation == "username") | .value' | clipboard
                ;;
            '>> Copy OTP'*)
                op get totp "$id" | clipboard
                ;;
            '>> Copy URL'*)
                op get item "$id" | jq -j '.overview.url' | clipboard
                ;;
            '>> Copy ID'*)
                op get item "$id" | jq -j '.uuid' | clipboard
                ;;
            '>> Open'*)
                open-account-url "$id"
                ;;
            *)
                show-account-options "$id"
                ;;
        esac
    else
        echo "Could not detect the entry ID of \"${selected}\""
        exit 1
    fi
else
    print-account-list
fi
