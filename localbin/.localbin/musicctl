#!/bin/luajit

json = require "json"
ev = require "ev"
ws = require "websocket.client".ev()
local unistd = require "posix.unistd"
local signal = require "posix.signal"

local song = nil
local playing = false

local exitNow = false

local function render()
	if song == nil then
		return
	end
	io.stdout:write(tostring(playing) ..  ";" .. song, "\n")
	io.stdout:flush()
end

local cbs = {
	track = function(p)
		if type(p.artist) == "string" and type(p.title) == "string" then
			song = p.title .. " - " .. p.artist
			render()
		end
	end,
	playState = function(p)
		playing = p
		render()
	end
}

ws:on_message(function(ws, msg)
	local data = json.decode(msg)
	local f = cbs[data.channel]
	if f then
		f(data.payload)
	end
end)

ws:on_close(function(ws)
	ev.Loop.default:unloop()
end)

function stop()
	exitNow=true
	ws:close()
end

signal.signal(1, stop)
signal.signal(2, stop)
signal.signal(15, stop)

ws:on_error(function(ws, msg)
	io.stderr:write("Error: " .. msg .. "\n")
	ev.Loop.default:unloop()
	hasError = true
	return false
end)

hasError = false

while not exitNow do
	ws:connect("ws://localhost:5672", "GPMDP")
	if not hasError then
		ev.Loop.default:loop()
	else
		unistd.sleep(3)
		hasError = false
	end
end
